//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Escrow.BOAS.Trade.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TradeEntities : DbContext
    {
        public TradeEntities()
            : base("name=TradeEntities")
        {
            this.Database.CommandTimeout = this.Database.Connection.ConnectionTimeout;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DimDate> DimDates { get; set; }
        public virtual DbSet<tblConstantObject> tblConstantObjects { get; set; }
        public virtual DbSet<tblConstantObjectValue> tblConstantObjectValues { get; set; }
        public virtual DbSet<tblClosingPrice> tblClosingPrices { get; set; }
        public virtual DbSet<tblNonTradingDetail> tblNonTradingDetails { get; set; }
        public virtual DbSet<tblNonTradingMaster> tblNonTradingMasters { get; set; }
        public virtual DbSet<tmpTradeData> tmpTradeDatas { get; set; }
        public virtual DbSet<tblTradeData> tblTradeDatas { get; set; }
        public virtual DbSet<tblFTOmnibusImportLog> tblFTOmnibusImportLogs { get; set; }
        public virtual DbSet<tblInitialTrade> tblInitialTrades { get; set; }
        public virtual DbSet<tblInitialClientReceivablePayable> tblInitialClientReceivablePayables { get; set; }
    
        public virtual int psp_execute_close_price_file(string changed_user_id, Nullable<decimal> membership_id)
        {
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_execute_close_price_file", changed_user_idParameter, membership_idParameter);
        }
    
        public virtual int isp_non_trading_day(Nullable<decimal> from_date, Nullable<decimal> to_date, Nullable<decimal> non_trading_type_id, string input_info, string remarks, Nullable<decimal> active_status_id, Nullable<decimal> membership_id, string changed_user_id)
        {
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(decimal));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(decimal));
    
            var non_trading_type_idParameter = non_trading_type_id.HasValue ?
                new ObjectParameter("non_trading_type_id", non_trading_type_id) :
                new ObjectParameter("non_trading_type_id", typeof(decimal));
    
            var input_infoParameter = input_info != null ?
                new ObjectParameter("input_info", input_info) :
                new ObjectParameter("input_info", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var active_status_idParameter = active_status_id.HasValue ?
                new ObjectParameter("active_status_id", active_status_id) :
                new ObjectParameter("active_status_id", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("isp_non_trading_day", from_dateParameter, to_dateParameter, non_trading_type_idParameter, input_infoParameter, remarksParameter, active_status_idParameter, membership_idParameter, changed_user_idParameter);
        }
    
        public virtual int psp_execute_trade_file(Nullable<decimal> membership_id, string changed_user_id, Nullable<decimal> stock_exchange_id)
        {
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            var stock_exchange_idParameter = stock_exchange_id.HasValue ?
                new ObjectParameter("stock_exchange_id", stock_exchange_id) :
                new ObjectParameter("stock_exchange_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_execute_trade_file", membership_idParameter, changed_user_idParameter, stock_exchange_idParameter);
        }
    
        public virtual int psp_reverse_trade_file(Nullable<decimal> date, Nullable<decimal> stock_exchange_id, Nullable<decimal> membership_id, string changed_user_id)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(decimal));
    
            var stock_exchange_idParameter = stock_exchange_id.HasValue ?
                new ObjectParameter("stock_exchange_id", stock_exchange_id) :
                new ObjectParameter("stock_exchange_id", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_reverse_trade_file", dateParameter, stock_exchange_idParameter, membership_idParameter, changed_user_idParameter);
        }
    
        public virtual ObjectResult<string> psp_export_omnibus_trade(Nullable<decimal> stock_Exchange_id, Nullable<decimal> trd_dt, string omnibus_master_id, string isTxtOrXml)
        {
            var stock_Exchange_idParameter = stock_Exchange_id.HasValue ?
                new ObjectParameter("stock_Exchange_id", stock_Exchange_id) :
                new ObjectParameter("stock_Exchange_id", typeof(decimal));
    
            var trd_dtParameter = trd_dt.HasValue ?
                new ObjectParameter("trd_dt", trd_dt) :
                new ObjectParameter("trd_dt", typeof(decimal));
    
            var omnibus_master_idParameter = omnibus_master_id != null ?
                new ObjectParameter("omnibus_master_id", omnibus_master_id) :
                new ObjectParameter("omnibus_master_id", typeof(string));
    
            var isTxtOrXmlParameter = isTxtOrXml != null ?
                new ObjectParameter("isTxtOrXml", isTxtOrXml) :
                new ObjectParameter("isTxtOrXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("psp_export_omnibus_trade", stock_Exchange_idParameter, trd_dtParameter, omnibus_master_idParameter, isTxtOrXmlParameter);
        }
    
        public virtual ObjectResult<ssp_ft_exp_log_list_Result> ssp_ft_exp_log_list(string file_type, Nullable<decimal> membership_id)
        {
            var file_typeParameter = file_type != null ?
                new ObjectParameter("file_type", file_type) :
                new ObjectParameter("file_type", typeof(string));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ft_exp_log_list_Result>("ssp_ft_exp_log_list", file_typeParameter, membership_idParameter);
        }
    
        public virtual ObjectResult<psp_upload_trade_Result> psp_upload_trade()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<psp_upload_trade_Result>("psp_upload_trade");
        }
    
        public virtual ObjectResult<psp_upload_initial_trade_Result> psp_upload_initial_trade()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<psp_upload_initial_trade_Result>("psp_upload_initial_trade");
        }
    }
}
