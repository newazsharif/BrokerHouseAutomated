//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Escrow.BOAS.InvestorManagement.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InvestorEntities : DbContext
    {
        public InvestorEntities()
            : base("name=InvestorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBank> tblBanks { get; set; }
        public virtual DbSet<tblBankBranch> tblBankBranches { get; set; }
        public virtual DbSet<tblBrokerBranch> tblBrokerBranches { get; set; }
        public virtual DbSet<tblTrader> tblTraders { get; set; }
        public virtual DbSet<DimDate> DimDates { get; set; }
        public virtual DbSet<tblConstantObject> tblConstantObjects { get; set; }
        public virtual DbSet<tblConstantObjectValue> tblConstantObjectValues { get; set; }
        public virtual DbSet<tblDayProcess> tblDayProcesses { get; set; }
        public virtual DbSet<tblAccountClosing> tblAccountClosings { get; set; }
        public virtual DbSet<tblInvestor> tblInvestors { get; set; }
        public virtual DbSet<tblInvestorFinancialLedger> tblInvestorFinancialLedgers { get; set; }
        public virtual DbSet<tblInvestorFundBalance> tblInvestorFundBalances { get; set; }
        public virtual DbSet<tblInvestorImage> tblInvestorImages { get; set; }
        public virtual DbSet<tblInvestorShareBalance> tblInvestorShareBalances { get; set; }
        public virtual DbSet<tblInvestorShareLedger> tblInvestorShareLedgers { get; set; }
        public virtual DbSet<tblJoinHolder> tblJoinHolders { get; set; }
        public virtual DbSet<tblNominee> tblNominees { get; set; }
        public virtual DbSet<tblPowerOfAtornee> tblPowerOfAtornees { get; set; }
        public virtual DbSet<tblInvestorTemp> tblInvestorTemps { get; set; }
        public virtual DbSet<vw_InvestorFundBalance> vw_InvestorFundBalance { get; set; }
        public virtual DbSet<vw_InvestorShareBalance> vw_InvestorShareBalance { get; set; }
        public virtual DbSet<vw_all_investors_account_type_setting> vw_all_investors_account_type_setting { get; set; }
        public virtual DbSet<vw_all_investors_charges> vw_all_investors_charges { get; set; }
        public virtual DbSet<tblIntroducer> tblIntroducers { get; set; }
        public virtual DbSet<tblOmnibu> tblOmnibus { get; set; }
    
        public virtual int psp_investor_financial_transaction(string id, Nullable<decimal> fINANCIAL_LEDGER_TYPE_ID, Nullable<decimal> membership_id, string changed_user_id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fINANCIAL_LEDGER_TYPE_IDParameter = fINANCIAL_LEDGER_TYPE_ID.HasValue ?
                new ObjectParameter("FINANCIAL_LEDGER_TYPE_ID", fINANCIAL_LEDGER_TYPE_ID) :
                new ObjectParameter("FINANCIAL_LEDGER_TYPE_ID", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_investor_financial_transaction", idParameter, fINANCIAL_LEDGER_TYPE_IDParameter, membership_idParameter, changed_user_idParameter);
        }
    
        [DbFunction("InvestorEntities", "udfSpliter")]
        public virtual IQueryable<string> udfSpliter(string cds)
        {
            var cdsParameter = cds != null ?
                new ObjectParameter("cds", cds) :
                new ObjectParameter("cds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[InvestorEntities].[udfSpliter](@cds)", cdsParameter);
        }
    }
}
