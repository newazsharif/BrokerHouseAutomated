//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Escrow.BOAS.Transaction.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransactionEntities : DbContext
    {
        public TransactionEntities()
            : base("name=TransactionEntities")
        {
            this.Database.CommandTimeout = this.Database.Connection.ConnectionTimeout;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBrokerBranch> tblBrokerBranches { get; set; }
        public virtual DbSet<tblGlobalCharge> tblGlobalCharges { get; set; }
        public virtual DbSet<DimDate> DimDates { get; set; }
        public virtual DbSet<tblConstantObject> tblConstantObjects { get; set; }
        public virtual DbSet<tblConstantObjectValue> tblConstantObjectValues { get; set; }
        public virtual DbSet<tblInvestorImage> tblInvestorImages { get; set; }
        public virtual DbSet<tblJoinHolder> tblJoinHolders { get; set; }
        public virtual DbSet<tblFundWithdrawalRequest> tblFundWithdrawalRequests { get; set; }
        public virtual DbSet<tblInvestorFundBalance> tblInvestorFundBalances { get; set; }
        public virtual DbSet<tblForceChargeApply> tblForceChargeApplies { get; set; }
        public virtual DbSet<tblBankBranch> tblBankBranches { get; set; }
        public virtual DbSet<tblBank> tblBanks { get; set; }
        public virtual DbSet<tblFundReceive> tblFundReceives { get; set; }
        public virtual DbSet<vw_InvestorFundBalance> vw_InvestorFundBalance { get; set; }
        public virtual DbSet<tblBrokerBankAccount> tblBrokerBankAccounts { get; set; }
        public virtual DbSet<tblInvestor> tblInvestors { get; set; }
        public virtual DbSet<vw_all_investors_account_type_setting> vw_all_investors_account_type_setting { get; set; }
        public virtual DbSet<tblFundWithdraw> tblFundWithdraws { get; set; }
        public virtual DbSet<tblFundTransfer> tblFundTransfers { get; set; }
    
        public virtual int psp_investor_financial_transaction(string id, Nullable<decimal> fINANCIAL_LEDGER_TYPE_ID, Nullable<decimal> membership_id, string changed_user_id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var fINANCIAL_LEDGER_TYPE_IDParameter = fINANCIAL_LEDGER_TYPE_ID.HasValue ?
                new ObjectParameter("FINANCIAL_LEDGER_TYPE_ID", fINANCIAL_LEDGER_TYPE_ID) :
                new ObjectParameter("FINANCIAL_LEDGER_TYPE_ID", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_investor_financial_transaction", idParameter, fINANCIAL_LEDGER_TYPE_IDParameter, membership_idParameter, changed_user_idParameter);
        }
    
        public virtual int isp_on_dem_char_all_inv(Nullable<decimal> charge_id, Nullable<decimal> transaction_type_id, Nullable<decimal> amount, Nullable<decimal> transaction_date, Nullable<decimal> value_date, string remarks, Nullable<decimal> membership_id, string changed_user_id, Nullable<System.DateTime> changed_date, Nullable<decimal> is_dirty)
        {
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(decimal));
    
            var transaction_type_idParameter = transaction_type_id.HasValue ?
                new ObjectParameter("transaction_type_id", transaction_type_id) :
                new ObjectParameter("transaction_type_id", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var transaction_dateParameter = transaction_date.HasValue ?
                new ObjectParameter("transaction_date", transaction_date) :
                new ObjectParameter("transaction_date", typeof(decimal));
    
            var value_dateParameter = value_date.HasValue ?
                new ObjectParameter("value_date", value_date) :
                new ObjectParameter("value_date", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            var changed_dateParameter = changed_date.HasValue ?
                new ObjectParameter("changed_date", changed_date) :
                new ObjectParameter("changed_date", typeof(System.DateTime));
    
            var is_dirtyParameter = is_dirty.HasValue ?
                new ObjectParameter("is_dirty", is_dirty) :
                new ObjectParameter("is_dirty", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("isp_on_dem_char_all_inv", charge_idParameter, transaction_type_idParameter, amountParameter, transaction_dateParameter, value_dateParameter, remarksParameter, membership_idParameter, changed_user_idParameter, changed_dateParameter, is_dirtyParameter);
        }
    
        public virtual int psp_on_dem_char_xl_dt(Nullable<decimal> charge_id, Nullable<decimal> transaction_type_id, Nullable<decimal> transaction_date, Nullable<decimal> value_date, Nullable<decimal> membership_id, string changed_user_id, Nullable<System.DateTime> changed_date, Nullable<decimal> is_dirty, Nullable<decimal> is_upd_processed_client)
        {
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(decimal));
    
            var transaction_type_idParameter = transaction_type_id.HasValue ?
                new ObjectParameter("transaction_type_id", transaction_type_id) :
                new ObjectParameter("transaction_type_id", typeof(decimal));
    
            var transaction_dateParameter = transaction_date.HasValue ?
                new ObjectParameter("transaction_date", transaction_date) :
                new ObjectParameter("transaction_date", typeof(decimal));
    
            var value_dateParameter = value_date.HasValue ?
                new ObjectParameter("value_date", value_date) :
                new ObjectParameter("value_date", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var changed_user_idParameter = changed_user_id != null ?
                new ObjectParameter("changed_user_id", changed_user_id) :
                new ObjectParameter("changed_user_id", typeof(string));
    
            var changed_dateParameter = changed_date.HasValue ?
                new ObjectParameter("changed_date", changed_date) :
                new ObjectParameter("changed_date", typeof(System.DateTime));
    
            var is_dirtyParameter = is_dirty.HasValue ?
                new ObjectParameter("is_dirty", is_dirty) :
                new ObjectParameter("is_dirty", typeof(decimal));
    
            var is_upd_processed_clientParameter = is_upd_processed_client.HasValue ?
                new ObjectParameter("is_upd_processed_client", is_upd_processed_client) :
                new ObjectParameter("is_upd_processed_client", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_on_dem_char_xl_dt", charge_idParameter, transaction_type_idParameter, transaction_dateParameter, value_dateParameter, membership_idParameter, changed_user_idParameter, changed_dateParameter, is_dirtyParameter, is_upd_processed_clientParameter);
        }
    
        public virtual ObjectResult<rsp_manual_charge_branch_wise_Result> rsp_manual_charge_branch_wise(Nullable<decimal> membership_id, string client_id, Nullable<System.DateTime> from_dt, Nullable<System.DateTime> to_dt, Nullable<decimal> branch_id, Nullable<decimal> charge_id, string user_id)
        {
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var client_idParameter = client_id != null ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(string));
    
            var from_dtParameter = from_dt.HasValue ?
                new ObjectParameter("from_dt", from_dt) :
                new ObjectParameter("from_dt", typeof(System.DateTime));
    
            var to_dtParameter = to_dt.HasValue ?
                new ObjectParameter("to_dt", to_dt) :
                new ObjectParameter("to_dt", typeof(System.DateTime));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(decimal));
    
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(decimal));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rsp_manual_charge_branch_wise_Result>("rsp_manual_charge_branch_wise", membership_idParameter, client_idParameter, from_dtParameter, to_dtParameter, branch_idParameter, charge_idParameter, user_idParameter);
        }
    
        public virtual ObjectResult<rsp_payment_Result> rsp_payment(Nullable<decimal> membership_id, string user_id, Nullable<System.DateTime> from_dt, Nullable<System.DateTime> to_dt, string voucher_no, string client_id, Nullable<decimal> branch_id, Nullable<decimal> transaction_mode_id, Nullable<decimal> is_approved)
        {
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var from_dtParameter = from_dt.HasValue ?
                new ObjectParameter("from_dt", from_dt) :
                new ObjectParameter("from_dt", typeof(System.DateTime));
    
            var to_dtParameter = to_dt.HasValue ?
                new ObjectParameter("to_dt", to_dt) :
                new ObjectParameter("to_dt", typeof(System.DateTime));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var client_idParameter = client_id != null ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(string));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(decimal));
    
            var transaction_mode_idParameter = transaction_mode_id.HasValue ?
                new ObjectParameter("transaction_mode_id", transaction_mode_id) :
                new ObjectParameter("transaction_mode_id", typeof(decimal));
    
            var is_approvedParameter = is_approved.HasValue ?
                new ObjectParameter("is_approved", is_approved) :
                new ObjectParameter("is_approved", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rsp_payment_Result>("rsp_payment", membership_idParameter, user_idParameter, from_dtParameter, to_dtParameter, voucher_noParameter, client_idParameter, branch_idParameter, transaction_mode_idParameter, is_approvedParameter);
        }
    
        public virtual ObjectResult<rsp_receive_Result> rsp_receive(Nullable<decimal> membership_id, string user_id, Nullable<System.DateTime> from_dt, Nullable<System.DateTime> to_dt, string voucher_no, string client_id, Nullable<decimal> branch_id, Nullable<decimal> transaction_mode_id, Nullable<decimal> is_approved)
        {
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var from_dtParameter = from_dt.HasValue ?
                new ObjectParameter("from_dt", from_dt) :
                new ObjectParameter("from_dt", typeof(System.DateTime));
    
            var to_dtParameter = to_dt.HasValue ?
                new ObjectParameter("to_dt", to_dt) :
                new ObjectParameter("to_dt", typeof(System.DateTime));
    
            var voucher_noParameter = voucher_no != null ?
                new ObjectParameter("voucher_no", voucher_no) :
                new ObjectParameter("voucher_no", typeof(string));
    
            var client_idParameter = client_id != null ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(string));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(decimal));
    
            var transaction_mode_idParameter = transaction_mode_id.HasValue ?
                new ObjectParameter("transaction_mode_id", transaction_mode_id) :
                new ObjectParameter("transaction_mode_id", typeof(decimal));
    
            var is_approvedParameter = is_approved.HasValue ?
                new ObjectParameter("is_approved", is_approved) :
                new ObjectParameter("is_approved", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rsp_receive_Result>("rsp_receive", membership_idParameter, user_idParameter, from_dtParameter, to_dtParameter, voucher_noParameter, client_idParameter, branch_idParameter, transaction_mode_idParameter, is_approvedParameter);
        }
    
        public virtual ObjectResult<ssp_already_processed_on_dem_char_Result> ssp_already_processed_on_dem_char(Nullable<decimal> charge_id, Nullable<decimal> transaction_type_id, Nullable<decimal> transaction_date)
        {
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(decimal));
    
            var transaction_type_idParameter = transaction_type_id.HasValue ?
                new ObjectParameter("transaction_type_id", transaction_type_id) :
                new ObjectParameter("transaction_type_id", typeof(decimal));
    
            var transaction_dateParameter = transaction_date.HasValue ?
                new ObjectParameter("transaction_date", transaction_date) :
                new ObjectParameter("transaction_date", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_already_processed_on_dem_char_Result>("ssp_already_processed_on_dem_char", charge_idParameter, transaction_type_idParameter, transaction_dateParameter);
        }
    
        public virtual ObjectResult<ssp_on_dem_char_xl_upl_err_Result> ssp_on_dem_char_xl_upl_err()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_on_dem_char_xl_upl_err_Result>("ssp_on_dem_char_xl_upl_err");
        }
    
        public virtual ObjectResult<ssp_on_dem_char_upl_Result> ssp_on_dem_char_upl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_on_dem_char_upl_Result>("ssp_on_dem_char_upl");
        }
    
        public virtual int psp_approve_on_dem_char(string transaction_dates, string charge_ids, string transaction_type_ids, Nullable<decimal> approve_date, string approve_by, Nullable<decimal> financial_ledger_type_id, Nullable<decimal> membership_id)
        {
            var transaction_datesParameter = transaction_dates != null ?
                new ObjectParameter("transaction_dates", transaction_dates) :
                new ObjectParameter("transaction_dates", typeof(string));
    
            var charge_idsParameter = charge_ids != null ?
                new ObjectParameter("charge_ids", charge_ids) :
                new ObjectParameter("charge_ids", typeof(string));
    
            var transaction_type_idsParameter = transaction_type_ids != null ?
                new ObjectParameter("transaction_type_ids", transaction_type_ids) :
                new ObjectParameter("transaction_type_ids", typeof(string));
    
            var approve_dateParameter = approve_date.HasValue ?
                new ObjectParameter("approve_date", approve_date) :
                new ObjectParameter("approve_date", typeof(decimal));
    
            var approve_byParameter = approve_by != null ?
                new ObjectParameter("approve_by", approve_by) :
                new ObjectParameter("approve_by", typeof(string));
    
            var financial_ledger_type_idParameter = financial_ledger_type_id.HasValue ?
                new ObjectParameter("financial_ledger_type_id", financial_ledger_type_id) :
                new ObjectParameter("financial_ledger_type_id", typeof(decimal));
    
            var membership_idParameter = membership_id.HasValue ?
                new ObjectParameter("membership_id", membership_id) :
                new ObjectParameter("membership_id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("psp_approve_on_dem_char", transaction_datesParameter, charge_idsParameter, transaction_type_idsParameter, approve_dateParameter, approve_byParameter, financial_ledger_type_idParameter, membership_idParameter);
        }
    
        public virtual ObjectResult<ssp_on_dem_char_approve_list_Result> ssp_on_dem_char_approve_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_on_dem_char_approve_list_Result>("ssp_on_dem_char_approve_list");
        }
    
        public virtual ObjectResult<ssp_payment_approve_list_Result> ssp_payment_approve_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_payment_approve_list_Result>("ssp_payment_approve_list");
        }
    
        public virtual ObjectResult<ssp_transfer_approve_list_Result> ssp_transfer_approve_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_transfer_approve_list_Result>("ssp_transfer_approve_list");
        }
    }
}
